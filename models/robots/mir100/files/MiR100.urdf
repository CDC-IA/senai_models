<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from mir100.urdf.xacro              | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="MiR100">
  <!-- <xacro:include filename="$(find senai_models)/models/${model_class}/${model}/urdf/include/common.gazebo.xacro" /> -->
  <link name="MiR100/base_footprint"/>
  <joint name="MiR100/base_joint" type="fixed">
    <parent link="MiR100/base_footprint"/>
    <child link="MiR100/base_link"/>
    <origin rpy="0 0 0" xyz="0 0 0"/>
  </joint>
  <link name="MiR100/base_link">
    <inertial>
      <mass value="58.0"/>
      <origin rpy="0 0 0" xyz="0.037646 0 0.20"/>
      <inertia ixx="2.0609325089599997" ixy="0.0" ixz="0.0" iyy="4.34999826" iyz="0.0" izz="5.54093111696"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0.037646 0 0"/>
      <geometry>
        <mesh filename="package://senai_models/models/robots/mir100/meshes/visual/mir_100_base.stl"/>
      </geometry>
      <material name="white">
        <color rgba="1 1 1 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0.037646 0 0"/>
      <geometry>
        <mesh filename="package://senai_models/models/robots/mir100/meshes/collision/mir_100_base.stl"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="MiR100/base_link">
    <material>Gazebo/White</material>
  </gazebo>
  <!-- IMU -->
  <joint name="MiR100/base_link_to_imu_joint" type="fixed">
    <parent link="MiR100/base_link"/>
    <child link="MiR100/imu_link"/>
    <origin rpy="0 0 0" xyz="0.0 0.0 0.25"/>
    <!-- same as real MiR -->
  </joint>
  <link name="MiR100/imu_link"/>
  <gazebo reference="MiR100/imu_link">
    <gravity>true</gravity>
    <sensor name="imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <!-- this is not the publish rate -->
      <visualize>true</visualize>
      <topic>/model/MiR100/imu_data</topic>
      <!-- <plugin filename="ignition-gazebo-imu-system" name="gz::sim::systems::Imu">
          <topicName>${imu_topic}</topicName>
          <bodyName>${link}</bodyName>
          <updateRateHZ>${update_rate}</updateRateHZ>  <!- this is the publish rate ->
          <gaussianNoise>${stdev * stdev}</gaussianNoise>
          <xyzOffset>0 0 0</xyzOffset>
          <rpyOffset>0 0 0</rpyOffset>
          <frameName>${imu_frame}</frameName>  <!- from real MiR ->
        </plugin> -->
      <pose>0 0 0 0 0 0</pose>
    </sensor>
  </gazebo>
  <!-- Create an alias for imu_link. This is necessary because the real MiR's
         TF has imu_link, but the imu_data topic is published in the imu_frame
         frame. -->
  <joint name="MiR100/imu_link_to_imu_frame_joint" type="fixed">
    <parent link="MiR100/imu_link"/>
    <child link="MiR100/imu_frame"/>
    <origin rpy="0 0 0" xyz="0 0 0"/>
  </joint>
  <link name="MiR100/imu_frame"/>
  <!-- Laser scanners -->
  <joint name="MiR100/base_link_to_front_laser_joint" type="fixed">
    <parent link="MiR100/base_link"/>
    <child link="MiR100/front_laser_link"/>
    <origin rpy="0.0 0.0 0.7853981633974483" xyz="0.4288 0.2358 0.1914"/>
    <!-- from visually matching up the meshes of the MiR and the laser scanner -->
  </joint>
  <link name="MiR100/front_laser_link">
    <visual>
      <origin rpy="3.141592653589793 0 0" xyz="0.0 0.0 0.0"/>
      <geometry>
        <mesh filename="package://senai_models/models/robots/mir100/meshes/visual/sick_lms-100.stl"/>
      </geometry>
      <!-- <xacro:insert_block name="material_yellow" /> -->
      <material name="black">
        <color rgba="0.1 0.1 0.1 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="3.141592653589793 0 0" xyz="0.0 0.0 0.0"/>
      <geometry>
        <mesh filename="package://senai_models/models/robots/mir100/meshes/visual/sick_lms-100.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="2.0"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.009708329449999999" ixy="0.0" ixz="0.0" iyy="0.0097601627626" iyz="0.0" izz="0.0080601634426"/>
    </inertial>
  </link>
  <gazebo reference="MiR100/front_laser_link">
    <!-- <material value="Gazebo/Yellow" /> -->
    <material value="Gazebo/FlatBlack"/>
    <sensor name="MiR100/front_laser_link" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>12.5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>684</samples>
            <resolution>1</resolution>
            <!-- has to be 1; actual resolution will be computed from number of samples + min_angle/max_angle -->
            <min_angle>-2.35619449615</min_angle>
            <max_angle>2.35619449615</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.05</min>
          <max>29.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for S300 achieving
                 "+-29mm" accuracy at range < 3m (~0.01 of the range) at
                 1 sigma. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_ray_sensor.so" name="front_laser">
        <ros>
          <namespace>/MiR100/lidar_sensor_broadcaster</namespace>
          <remapping>front_laser/out:=front_laser/scan</remapping>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <frame_name>MiR100/front_laser_link</frame_name>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="MiR100/base_link_to_back_laser_joint" type="fixed">
    <parent link="MiR100/base_link"/>
    <child link="MiR100/back_laser_link"/>
    <origin rpy="0.0 0.0 -2.356194490192345" xyz="-0.3548 -0.2352 0.1914"/>
    <!-- from visually matching up the meshes of the MiR and the laser scanner -->
  </joint>
  <link name="MiR100/back_laser_link">
    <visual>
      <origin rpy="3.141592653589793 0 0" xyz="0.0 0.0 0.0"/>
      <geometry>
        <mesh filename="package://senai_models/models/robots/mir100/meshes/visual/sick_lms-100.stl"/>
      </geometry>
      <!-- <xacro:insert_block name="material_yellow" /> -->
      <material name="black">
        <color rgba="0.1 0.1 0.1 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="3.141592653589793 0 0" xyz="0.0 0.0 0.0"/>
      <geometry>
        <mesh filename="package://senai_models/models/robots/mir100/meshes/visual/sick_lms-100.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="2.0"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.009708329449999999" ixy="0.0" ixz="0.0" iyy="0.0097601627626" iyz="0.0" izz="0.0080601634426"/>
    </inertial>
  </link>
  <gazebo reference="MiR100/back_laser_link">
    <!-- <material value="Gazebo/Yellow" /> -->
    <material value="Gazebo/FlatBlack"/>
    <sensor name="MiR100/back_laser_link" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>12.5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>684</samples>
            <resolution>1</resolution>
            <!-- has to be 1; actual resolution will be computed from number of samples + min_angle/max_angle -->
            <min_angle>-2.35619449615</min_angle>
            <max_angle>2.35619449615</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.05</min>
          <max>29.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for S300 achieving
                 "+-29mm" accuracy at range < 3m (~0.01 of the range) at
                 1 sigma. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_ray_sensor.so" name="back_laser">
        <ros>
          <namespace>/MiR100/lidar_sensor_broadcaster</namespace>
          <remapping>back_laser/out:=back_laser/scan</remapping>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <frame_name>MiR100/back_laser_link</frame_name>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="MiR100/us_right_joint" type="fixed">
    <!-- right ultrasound -->
    <parent link="MiR100/base_link"/>
    <child link="MiR100/us_right_frame"/>
    <origin rpy="0 0 0" xyz="0.45 -0.12 0.16 "/>
    <!-- from visually matching to the mesh of the MiR -->
  </joint>
  <link name="MiR100/us_right_frame"/>
  <gazebo reference="MiR100/us_right_frame">
    <sensor name="right_ultrasound" type="ray">
      <always_on>true</always_on>
      <visualize>false</visualize>
      <pose>0.0 0 0.0 0 0 0</pose>
      <update_rate>10</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>5</samples>
            <resolution>1.0</resolution>
            <min_angle>-0.14835</min_angle>
            <max_angle>0.14835</max_angle>
          </horizontal>
          <vertical>
            <samples>5</samples>
            <resolution>1.0</resolution>
            <min_angle>-0.14835</min_angle>
            <max_angle>0.14835</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.02</min>
          <max>2</max>
          <resolution>0.003</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_ray_sensor.so" name="right_ultrasound">
        <ros>
          <namespace>MiR100/ultrasound_sensor_broadcaster</namespace>
          <remapping>right_ultrasound/out:=right_ultrasound/scan</remapping>
        </ros>
        <output_type>sensor_msgs/Range</output_type>
        <radiation_type>ultrasound</radiation_type>
        <frame_name>MiR100/us_right_frame</frame_name>
      </plugin>
    </sensor>
    <material>Gazebo/Blue</material>
  </gazebo>
  <joint name="MiR100/us_left_joint" type="fixed">
    <!-- right ultrasound -->
    <parent link="MiR100/base_link"/>
    <child link="MiR100/us_left_frame"/>
    <origin rpy="0 0 0" xyz="0.45 0.12 0.16 "/>
    <!-- from visually matching to the mesh of the MiR -->
  </joint>
  <link name="MiR100/us_left_frame"/>
  <gazebo reference="MiR100/us_left_frame">
    <sensor name="left_ultrasound" type="ray">
      <always_on>true</always_on>
      <visualize>false</visualize>
      <pose>0.0 0 0.0 0 0 0</pose>
      <update_rate>10</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>5</samples>
            <resolution>1.0</resolution>
            <min_angle>-0.14835</min_angle>
            <max_angle>0.14835</max_angle>
          </horizontal>
          <vertical>
            <samples>5</samples>
            <resolution>1.0</resolution>
            <min_angle>-0.14835</min_angle>
            <max_angle>0.14835</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.02</min>
          <max>2</max>
          <resolution>0.003</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_ray_sensor.so" name="left_ultrasound">
        <ros>
          <namespace>MiR100/ultrasound_sensor_broadcaster</namespace>
          <remapping>left_ultrasound/out:=left_ultrasound/scan</remapping>
        </ros>
        <output_type>sensor_msgs/Range</output_type>
        <radiation_type>ultrasound</radiation_type>
        <frame_name>MiR100/us_left_frame</frame_name>
      </plugin>
    </sensor>
    <material>Gazebo/Blue</material>
  </gazebo>
  <joint name="MiR100/camera_joint" type="fixed">
    <parent link="MiR100/base_link"/>
    <child link="MiR100/camera_link"/>
    <origin rpy="0 0 0" xyz="0.45 0.039 0.279"/>
  </joint>
  <link name="MiR100/camera_link">
    <visual>
      <geometry>
        <box size="0.010 0.03 0.03"/>
      </geometry>
    </visual>
  </link>
  <joint name="MiR100/camera_optical_joint" type="fixed">
    <origin rpy="-1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0"/>
    <parent link="MiR100/camera_link"/>
    <child link="MiR100/camera_link_optical"/>
  </joint>
  <link name="MiR100/camera_link_optical"/>
  <gazebo reference="MiR100/camera_link">
    <material>Gazebo/Red</material>
    <!-- https://www.intelrealsense.com/depth-camera-d435/ -->
    <sensor name="camera" type="depth">
      <pose> 0 0 0 0 0 0 </pose>
      <visualize>false</visualize>
      <update_rate>90</update_rate>
      <camera>
        <horizontal_fov>1.518436</horizontal_fov>
        <image>
          <format>B8G8R8</format>
          <width>1280</width>
          <height>720</height>
        </image>
        <clip>
          <near>0.028</near>
          <far>8.0</far>
        </clip>
        <depth_camera>
          <clip>
            <near>0.028</near>
            <far>2.0</far>
          </clip>
        </depth_camera>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="camera_controller">
        <ros>
          <namespace>/MiR100/camera_sensor_broadcaster</namespace>
        </ros>
        <frame_name>MiR100/camera_link_optical</frame_name>
      </plugin>
    </sensor>
  </gazebo>
  <link name="MiR100/left_wheel_link">
    <inertial>
      <mass value="1.0"/>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <inertia ixx="0.001061895408575" ixy="0.0" ixz="0.0" iyy="0.001061895408575" iyz="0.0" izz="0.001953125"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://senai_models/models/robots/mir100/meshes/visual/wheel.stl"/>
      </geometry>
      <material name="dark_grey">
        <color rgba="0.3 0.3 0.3 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://senai_models/models/robots/mir100/meshes/visual/wheel.stl"/>
      </geometry>
    </collision>
  </link>
  <!-- <joint name="${prefix}${locationprefix}_wheel_joint" type="continuous"> -->
  <joint name="left_wheel_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0.0 0.222604 0.0625"/>
    <parent link="MiR100/base_link"/>
    <child link="MiR100/left_wheel_link"/>
    <axis xyz="0 1 0"/>
    <limit effort="100" velocity="20.0"/>
  </joint>
  <gazebo reference="MiR100/left_wheel_link">
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <link name="MiR100/right_wheel_link">
    <inertial>
      <mass value="1.0"/>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <inertia ixx="0.001061895408575" ixy="0.0" ixz="0.0" iyy="0.001061895408575" iyz="0.0" izz="0.001953125"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://senai_models/models/robots/mir100/meshes/visual/wheel.stl"/>
      </geometry>
      <material name="dark_grey">
        <color rgba="0.3 0.3 0.3 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://senai_models/models/robots/mir100/meshes/visual/wheel.stl"/>
      </geometry>
    </collision>
  </link>
  <!-- <joint name="${prefix}${locationprefix}_wheel_joint" type="continuous"> -->
  <joint name="right_wheel_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0.0 -0.222604 0.0625"/>
    <parent link="MiR100/base_link"/>
    <child link="MiR100/right_wheel_link"/>
    <axis xyz="0 1 0"/>
    <limit effort="100" velocity="20.0"/>
  </joint>
  <gazebo reference="MiR100/right_wheel_link">
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <link name="MiR100/fl_caster_rotation_link">
    <inertial>
      <!-- <origin xyz="0 0 -0.042500000044" rpy="${0.5 * pi} ${24 * deg_to_rad} ${1.5 * pi}" /> -->
      <origin rpy="0.41887903200000004 0 1.5707963267948966 " xyz="0 0 -0.042500000044"/>
      <mass value="0.3097539019"/>
      <inertia ixx="0.0005844517978" ixy="0" ixz="0" iyy="0.00052872551237" iyz="0" izz="0.00017923555074"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://senai_models/models/robots/mir100/meshes/visual/caster_wheel_base.stl"/>
      </geometry>
      <material name="silver">
        <color rgba="0.79 0.82 0.93 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://senai_models/models/robots/mir100/meshes/collision/caster_wheel_base.stl"/>
      </geometry>
    </collision>
  </link>
  <!-- caster hub -->
  <joint name="MiR100/fl_caster_rotation_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0.341346 0.203 0.1565"/>
    <parent link="MiR100/base_link"/>
    <child link="MiR100/fl_caster_rotation_link"/>
    <axis xyz="0 0 1"/>
    <dynamics damping="0.01" friction="0.0"/>
  </joint>
  <gazebo reference="MiR100/fl_caster_rotation_link">
    <material>Gazebo/Grey</material>
  </gazebo>
  <!-- caster wheel -->
  <link name="MiR100/fl_caster_wheel_link">
    <inertial>
      <mass value="1.0"/>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <inertia ixx="0.001061895408575" ixy="0.0" ixz="0.0" iyy="0.001061895408575" iyz="0.0" izz="0.001953125"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://senai_models/models/robots/mir100/meshes/visual/wheel.stl"/>
      </geometry>
      <material name="dark_grey">
        <color rgba="0.3 0.3 0.3 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://senai_models/models/robots/mir100/meshes/visual/wheel.stl"/>
      </geometry>
    </collision>
  </link>
  <joint name="MiR100/fl_caster_wheel_joint" type="continuous">
    <origin rpy="0 0 0" xyz="-0.0382 0 -0.094"/>
    <parent link="MiR100/fl_caster_rotation_link"/>
    <child link="MiR100/fl_caster_wheel_link"/>
    <axis xyz="0 1 0"/>
  </joint>
  <gazebo reference="MiR100/fl_caster_wheel_link">
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <link name="MiR100/fr_caster_rotation_link">
    <inertial>
      <!-- <origin xyz="0 0 -0.042500000044" rpy="${0.5 * pi} ${24 * deg_to_rad} ${1.5 * pi}" /> -->
      <origin rpy="0.41887903200000004 0 1.5707963267948966 " xyz="0 0 -0.042500000044"/>
      <mass value="0.3097539019"/>
      <inertia ixx="0.0005844517978" ixy="0" ixz="0" iyy="0.00052872551237" iyz="0" izz="0.00017923555074"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://senai_models/models/robots/mir100/meshes/visual/caster_wheel_base.stl"/>
      </geometry>
      <material name="silver">
        <color rgba="0.79 0.82 0.93 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://senai_models/models/robots/mir100/meshes/collision/caster_wheel_base.stl"/>
      </geometry>
    </collision>
  </link>
  <!-- caster hub -->
  <joint name="MiR100/fr_caster_rotation_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0.341346 -0.203 0.1565"/>
    <parent link="MiR100/base_link"/>
    <child link="MiR100/fr_caster_rotation_link"/>
    <axis xyz="0 0 1"/>
    <dynamics damping="0.01" friction="0.0"/>
  </joint>
  <gazebo reference="MiR100/fr_caster_rotation_link">
    <material>Gazebo/Grey</material>
  </gazebo>
  <!-- caster wheel -->
  <link name="MiR100/fr_caster_wheel_link">
    <inertial>
      <mass value="1.0"/>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <inertia ixx="0.001061895408575" ixy="0.0" ixz="0.0" iyy="0.001061895408575" iyz="0.0" izz="0.001953125"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://senai_models/models/robots/mir100/meshes/visual/wheel.stl"/>
      </geometry>
      <material name="dark_grey">
        <color rgba="0.3 0.3 0.3 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://senai_models/models/robots/mir100/meshes/visual/wheel.stl"/>
      </geometry>
    </collision>
  </link>
  <joint name="MiR100/fr_caster_wheel_joint" type="continuous">
    <origin rpy="0 0 0" xyz="-0.0382 0 -0.094"/>
    <parent link="MiR100/fr_caster_rotation_link"/>
    <child link="MiR100/fr_caster_wheel_link"/>
    <axis xyz="0 1 0"/>
  </joint>
  <gazebo reference="MiR100/fr_caster_wheel_link">
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <link name="MiR100/bl_caster_rotation_link">
    <inertial>
      <!-- <origin xyz="0 0 -0.042500000044" rpy="${0.5 * pi} ${24 * deg_to_rad} ${1.5 * pi}" /> -->
      <origin rpy="0.41887903200000004 0 1.5707963267948966 " xyz="0 0 -0.042500000044"/>
      <mass value="0.3097539019"/>
      <inertia ixx="0.0005844517978" ixy="0" ixz="0" iyy="0.00052872551237" iyz="0" izz="0.00017923555074"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://senai_models/models/robots/mir100/meshes/visual/caster_wheel_base.stl"/>
      </geometry>
      <material name="silver">
        <color rgba="0.79 0.82 0.93 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://senai_models/models/robots/mir100/meshes/collision/caster_wheel_base.stl"/>
      </geometry>
    </collision>
  </link>
  <!-- caster hub -->
  <joint name="MiR100/bl_caster_rotation_joint" type="continuous">
    <origin rpy="0 0 0" xyz="-0.270154 0.203 0.1565"/>
    <parent link="MiR100/base_link"/>
    <child link="MiR100/bl_caster_rotation_link"/>
    <axis xyz="0 0 1"/>
    <dynamics damping="0.01" friction="0.0"/>
  </joint>
  <gazebo reference="MiR100/bl_caster_rotation_link">
    <material>Gazebo/Grey</material>
  </gazebo>
  <!-- caster wheel -->
  <link name="MiR100/bl_caster_wheel_link">
    <inertial>
      <mass value="1.0"/>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <inertia ixx="0.001061895408575" ixy="0.0" ixz="0.0" iyy="0.001061895408575" iyz="0.0" izz="0.001953125"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://senai_models/models/robots/mir100/meshes/visual/wheel.stl"/>
      </geometry>
      <material name="dark_grey">
        <color rgba="0.3 0.3 0.3 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://senai_models/models/robots/mir100/meshes/visual/wheel.stl"/>
      </geometry>
    </collision>
  </link>
  <joint name="MiR100/bl_caster_wheel_joint" type="continuous">
    <origin rpy="0 0 0" xyz="-0.0382 0 -0.094"/>
    <parent link="MiR100/bl_caster_rotation_link"/>
    <child link="MiR100/bl_caster_wheel_link"/>
    <axis xyz="0 1 0"/>
  </joint>
  <gazebo reference="MiR100/bl_caster_wheel_link">
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <link name="MiR100/br_caster_rotation_link">
    <inertial>
      <!-- <origin xyz="0 0 -0.042500000044" rpy="${0.5 * pi} ${24 * deg_to_rad} ${1.5 * pi}" /> -->
      <origin rpy="0.41887903200000004 0 1.5707963267948966 " xyz="0 0 -0.042500000044"/>
      <mass value="0.3097539019"/>
      <inertia ixx="0.0005844517978" ixy="0" ixz="0" iyy="0.00052872551237" iyz="0" izz="0.00017923555074"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://senai_models/models/robots/mir100/meshes/visual/caster_wheel_base.stl"/>
      </geometry>
      <material name="silver">
        <color rgba="0.79 0.82 0.93 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://senai_models/models/robots/mir100/meshes/collision/caster_wheel_base.stl"/>
      </geometry>
    </collision>
  </link>
  <!-- caster hub -->
  <joint name="MiR100/br_caster_rotation_joint" type="continuous">
    <origin rpy="0 0 0" xyz="-0.270154 -0.203 0.1565"/>
    <parent link="MiR100/base_link"/>
    <child link="MiR100/br_caster_rotation_link"/>
    <axis xyz="0 0 1"/>
    <dynamics damping="0.01" friction="0.0"/>
  </joint>
  <gazebo reference="MiR100/br_caster_rotation_link">
    <material>Gazebo/Grey</material>
  </gazebo>
  <!-- caster wheel -->
  <link name="MiR100/br_caster_wheel_link">
    <inertial>
      <mass value="1.0"/>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <inertia ixx="0.001061895408575" ixy="0.0" ixz="0.0" iyy="0.001061895408575" iyz="0.0" izz="0.001953125"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://senai_models/models/robots/mir100/meshes/visual/wheel.stl"/>
      </geometry>
      <material name="dark_grey">
        <color rgba="0.3 0.3 0.3 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://senai_models/models/robots/mir100/meshes/visual/wheel.stl"/>
      </geometry>
    </collision>
  </link>
  <joint name="MiR100/br_caster_wheel_joint" type="continuous">
    <origin rpy="0 0 0" xyz="-0.0382 0 -0.094"/>
    <parent link="MiR100/br_caster_rotation_link"/>
    <child link="MiR100/br_caster_wheel_link"/>
    <axis xyz="0 1 0"/>
  </joint>
  <gazebo reference="MiR100/br_caster_wheel_link">
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <joint name="MiR100/base_link_surface_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.037646 0 0.352"/>
    <parent link="MiR100/base_link"/>
    <child link="MiR100/surface"/>
    <axis xyz="0 0 1"/>
  </joint>
  <link name="MiR100/surface"/>
  <transmission name="MiR100/left_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <!-- <joint name="${prefix}${locationprefix}_wheel_joint"> -->
    <joint name="left_wheel_joint">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="MiR100/left_wheel_motor">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="MiR100/right_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <!-- <joint name="${prefix}${locationprefix}_wheel_joint"> -->
    <joint name="right_wheel_joint">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="MiR100/right_wheel_motor">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <gazebo reference="MiR100/left_wheel_link">
    <mu1 value="200"/>
    <mu2 value="200"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <minDepth>0.01</minDepth>
  </gazebo>
  <gazebo reference="MiR100/right_wheel_link">
    <mu1 value="200"/>
    <mu2 value="200"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <minDepth>0.01</minDepth>
  </gazebo>
  <gazebo reference="MiR100/fl_caster_wheel_link">
    <mu1 value="1"/>
    <mu2 value="1"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <minDepth>0.01</minDepth>
  </gazebo>
  <gazebo reference="MiR100/fr_caster_wheel_link">
    <mu1 value="1"/>
    <mu2 value="1"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <minDepth>0.01</minDepth>
  </gazebo>
  <gazebo reference="MiR100/bl_caster_wheel_link">
    <mu1 value="1"/>
    <mu2 value="1"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <minDepth>0.01</minDepth>
  </gazebo>
  <gazebo reference="MiR100/br_caster_wheel_link">
    <mu1 value="1"/>
    <mu2 value="1"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <minDepth>0.01</minDepth>
  </gazebo>
  <!-- <xacro:p3d_base_controller prefix="${prefix}" /> -->
  <!-- <xacro:controller_plugin_gazebo robot_namespace="$(arg model_name)"/> -->
  <!-- instead of the controller_plugin_gazebo, you can use the diffdrive controller like this:-->
  <!-- <xacro:diff_controller_plugin_gazebo prefix=""
    left_wheel_joint="left_wheel_joint"
    right_wheel_joint="right_wheel_joint"
    wheel_separation="${2*mir_100_act_wheel_dy}"
    wheel_radius="${mir_100_act_wheel_radius}"
  /> -->
  <ros2_control name="GazeboSystem" type="system">
    <hardware>
      <plugin>gazebo_ros2_control/GazeboSystem</plugin>
    </hardware>
    <!-- <joint name="${prefix}left_wheel_joint"> -->
    <joint name="left_wheel_joint">
      <command_interface name="velocity">
        <param name="min">-10</param>
        <param name="max">10</param>
      </command_interface>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
    <!-- <joint name="${prefix}right_wheel_joint"> -->
    <joint name="right_wheel_joint">
      <command_interface name="velocity">
        <param name="min">-10</param>
        <param name="max">10</param>
      </command_interface>
      <state_interface name="velocity"/>
      <state_interface name="position"/>
    </joint>
    <sensor name="imu_sensor">
      <state_interface name="orientation.x"/>
      <state_interface name="orientation.y"/>
      <state_interface name="orientation.z"/>
      <state_interface name="orientation.w"/>
      <state_interface name="angular_velocity.x"/>
      <state_interface name="angular_velocity.y"/>
      <state_interface name="angular_velocity.z"/>
      <state_interface name="linear_acceleration.x"/>
      <state_interface name="linear_acceleration.y"/>
      <state_interface name="linear_acceleration.z"/>
    </sensor>
  </ros2_control>
  <gazebo>
    <plugin filename="libgazebo_ros2_control.so" name="gazebo_ros2_control">
      <ros>
        <namespace>/MiR100</namespace>
      </ros>
      <parameters>/home/gilmar/Desktop/ros2_ws/install/senai_models/share/senai_models/models/robots/mir100/config/classic/mir100_controllers.yaml</parameters>
    </plugin>
  </gazebo>
</robot>
